# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

appName = "sso-session-link-api"
appUrl = "https://sso-session-link-api.public.mdtp"

application.router = prod.Routes
application.session.httpOnly = false
application.session.secure = false
application.langs = "en"

logger.root = ERROR
logger.play = INFO
logger.application = INFO

play.modules.enabled += "config.GuiceModule"
play.crypto.secret = "yNhI04vHs9<_HWbC`]20u`37=NGLGYY5:0Tg5?y`W<NoJnXWqmjcgZBec@rOxb^G"

include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

## ssl retry
http-verbs.retries.ssl-engine-closed-already.enabled = true

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.
controllers {
  confidenceLevel = 0

  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.play.health.AdminController = {
    needsLogging = false
    needsAuditing = false
  }

  controllers.SsoInIdTokenController = {
    needsLogging = true
    needsAuditing = false
  }
}

caching.allowedContentTypes = ["application/json", "application/ld+json"]

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

ssoin {
  clientIds = "test-client-id"
  frontend.url = "/sso/ssoin"
  ttl = 1 minutes
}

Dev {

  relative-urls.enabled = false

  serviceDescription.timeout = 1 hours

  auditing {
    enabled = false
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  microservice {

    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = false
      }
    }

    services {
      sso {
        host = localhost
        port = 9974
      }
    }
  }
}

Test {
  auditing {
    enabled = false
    traceRequests = false
  }

  microservice {
    services {
      sso {
        host = localhost
        port = 9974
      }
    }
  }
}

Prod {

  auditing {
    enabled = true
    traceRequests = true
    consumer {
      baseUri {
        host = datastream.protected.mdtp
        port = 443
        protocol = https
      }
    }
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }
    services {
      sso {
        host = sso.public.mdtp
        port = 443
      }
    }
  }
}
